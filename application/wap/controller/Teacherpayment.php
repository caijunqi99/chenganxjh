<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/16
 * Time: 20:35
 */

namespace app\wap\controller;


class TeacherPayment extends MobileMall
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * Alipay支付回调
     */
    public function alipay_return_url()
    {
        $this->payment_code = 'alipay';
        $payment_config = $this->_get_payment_config();
        $payment_api = $this->_get_payment_api($payment_config);
        $pay_sn = explode('-', input('param.out_trade_no'));
        $data['pay_sn'] = $pay_sn['0'];
        trace('pay_sn' . $data['pay_sn'], 'debug');
        $data['order_amount'] = input('param.total_amount');
        $order_model = model('order');
        $order_info = $order_model->getOrderInfo($data);
        if (!empty($order_info)) {
            $callback_info = $payment_api->getReturnInfo($payment_config);
            if ($callback_info) {
                $this->assign('result', 'success');
                $this->assign('message', '支付成功');
            }
            else {
                //验证失败
                $this->assign('result', 'fail');
                $this->assign('message', '支付失败');
            }
        }
        else {
            //验证失败
            $this->assign('result', 'fail');
            $this->assign('message', '支付失败');
        }
        return $this->fetch('payment_message');
    }

    public function notify_url($input,$other=''){
        // $d = $this->xmlToArray(file_get_contents('php://input'));
        // $input = input();
        $insert = array(
            'content'=>json_encode(array(
                'InsertTime'=>date('Y-m-d H:i:s',time()),
                'PaymentCode'=>$this->payment_code,
                'input' =>$input,
                // 'data' =>$d,
                'other'=>$other
            ))
        );
        db('testt')->insert($insert);
    }

    public function xmlToArray($xml)
    {
        return json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true);
    }

    /**
     * 支付宝支付提醒
     */
    /**
     * 支付宝支付异步提醒
     */
    public function alipay_notify_app()
    {
        $this->payment_code = 'alipay_app';
        $payment_api = $this->_get_payment_api();

        $input = input();
        $pay_sn = explode('-', $input['out_trade_no']);
        $data['pay_sn'] = $pay_sn['0'];
        $Package = model('Packagesorderteach');
        $order_info = $Package->getOrderInfo($data);
        
        $this->notify_url($input,$order_info);

        if (!empty($order_info) && $input) {
            $callback_info = $payment_api->verify_notify($input);
            if ($callback_info['trade_status'] == '1') {
                //验证成功
                $update = array(
                    'out_pay_sn' => $callback_info['trade_no'],
                    'payment_time' => strtotime($input['gmt_create']),
                    'finnshed_time' => time(),
                    'pd_amount' => 0, //预存款支付金额
                    'evaluation_state' => 0, //评价状态 0未评价，1已评价，2已过期未评价
                    'order_state' => 20 ,//订单状态：0(已取消)10(默认):未付款;20:已付款;40:已完成;
                    'over_amount' => $callback_info['total_fee'], //最终支付金额
                    'order_dieline' => $this->time()
                );

                $result = $Package->editOrder($update, array('order_id'=>$order_info['order_id']));
                if ($result) {
                    $this->money($callback_info['total_fee'],$order_info['order_tid']);
                    echo 'SUCCESS';die;
                }
            }
        }
        //验证失败
        echo "fail";exit;

    }

    /**
     *微信h5支付回调
     */
    public function wx_notify_h5()
    {
        $this->payment_code = 'wxpay_h5';
        $api = $this->_get_payment_api();
        $input = $this->xmlToArray(file_get_contents('php://input'));
        $Package = model('Packagesorderteach');
        $data =array();
        $data['pay_sn'] = $input['out_trade_no'];
        $order_info = $Package->getOrderInfo($data);
        $this->notify_url($input,$order_info);
        
        if ($order_info && $input['result_code']=="SUCCESS") {
            //验证订单
            //验证成功
            $update = array(
                'out_pay_sn' => $input['transaction_id'],
                'payment_time' => strtotime($input['time_end']),
                'finnshed_time' => time(),
                'pd_amount' => 0, //预存款支付金额
                'evaluation_state' => 0, //评价状态 0未评价，1已评价，2已过期未评价
                'order_state' => 20, //订单状态：0(已取消)10(默认):未付款;20:已付款;40:已完成;
                'over_amount' => $input['total_fee']/100, //最终支付金额
                'order_dieline' => $this->time()
            );
            $result = $Package->editOrder($update, array('order_id'=>$order_info['order_id']));
            if ($result) {
                $this->money($input['total_fee']/100,$order_info['order_tid']);
                echo 'SUCCESS';die;
            }
        }
        echo 'fail';die;
    }

    //视频有效期
    public function time(){
        $config = db('config')->where(array('code'=>"teacher_children"))->find();
        $time = strtotime("+".$config['value']." hour");
        return $time;
    }

    /**
     *微信app支付回调
     */
    public function wx_notify_app()
    {
        $this->payment_code = 'wxpay_app';
        $api = $this->_get_payment_api();
        $params = $this->_get_payment_config();

        $result = $api->verify_notify($params);

        if ($result['trade_status'] == '1') {
            $internalSn = $result['out_trade_no'] . '_' . $result['attach'];
            $externalSn = $result['transaction_id'];
            $updateSuccess = $this->_update_order($internalSn, $externalSn);

            if (!$updateSuccess) {
                // @todo
                // 直接退出 等待下次通知
                exit;
            }
        }
        exit;
    }



    /**
     * 获取支付接口实例
     */
    private function _get_payment_api($payment_config=array())
    {
        $inc_file = APP_PATH . 'wap' . DS . 'api' . DS . 'payment' . DS . $this->payment_code . DS . $this->payment_code . '.php';

        if (is_file($inc_file)) {
            require($inc_file);
        }

        $payment_api = new $this->payment_code($payment_config);

        return $payment_api;
    }

    /**
     * 获取支付接口信息
     */
    private function _get_payment_config()
    {
        $model_mb_payment = Model('mbpayment');

        //读取接口配置信息
        $condition = array();
        if ($this->payment_code == 'wxpay_h5') {
            $condition['payment_code'] = 'wxpay_jsapi';
        }
        else {
            $condition['payment_code'] = $this->payment_code;
        }
        $payment_info = $model_mb_payment->getMbPaymentOpenInfo($condition);

        return $payment_info['payment_config'];
    }

    /*
     * 教孩视频支付成功 给教师，市代，省代，总后台分成
     * 分成比例在后台设置 config表-》code=teacher_pay_scale
     * 如果没有市代，市代应得的分成给总后台
     * 如果没有省代，省代应得的分成给总后台
     * 教师分成金额存储member表，代理商分成金额存储company表
     * 每次分成，金额增加日志存pdlog表
     *
     * */
    public function money($price,$video_id){
        //分成比例
        $proportion = db('config')->where(array('code'=>"teacher_pay_scale"))->find();
        $proportion['value'] = json_decode($proportion['value'],true);
        //教师分成金额
        $teacher_price = sprintf('%.4f', $price*$proportion['value']['teacher']/100);
        $video = db("teachchild")->where(array('t_id'=>$video_id))->find();
        $teacher_id = $video['t_userid'];
        $member_model = Model("Member");
        $member = $member_model->getMemberInfoByID($teacher_id);
        $teacher_new_price = sprintf('%.4f', $member['available_predeposit']+$teacher_price);
        $teacher = $member_model->editMember(array('member_id'=>$teacher_id),array('available_predeposit'=>$teacher_new_price));
        if(empty($teacher)){
            output_error('教师分成失败');
        }
        $log_model = Model("Pdlog");
        $teacher_data = [
            "lg_member_id" => $teacher_id,
            "lg_member_name" => $member['member_mobile'],
            "lg_type" => "share_payment",
            "lg_av_amount" => $teacher_price,
            "lg_add_time" => time(),
            "lg_desc" => "教孩视频，用户支付成功给教师分成。"
        ];
        $log_model->addLog($teacher_data);
        //市代理商分成金额
        $city_price = sprintf('%.4f', $price*$proportion['value']['city_agent']/100);
        $teachercertify = db("teachercertify")->where(array("member_id"=>$teacher_id))->find();
        $company_model = Model("Company");
        $city_agent = $company_model->getOrganizeInfo(array('o_provinceid'=>$teachercertify['provinceid'],'o_cityid'=>$teachercertify['cityid']));
        if($city_agent){
            $city_new_price = $city_agent['total_amount'] + $city_price;
            $city = $company_model->editOrganize(array("o_id"=>$city_agent['o_id']),array("total_amount"=>$city_new_price));
            if(empty($city)){
                output_error('市代分成失败');
            }
            $city_data = [
                "lg_member_id" => $city_agent['o_id'],
                "lg_member_name" => $city_agent['o_name'],
                "lg_type" => "share_city_payment",
                "lg_av_amount" => $city_price,
                "lg_add_time" => time(),
                "lg_desc" => "教孩视频，用户支付成功给市代理商分成。"
            ];
            $log_model->addLog($city_data);
        }else{
            $admininfo = db("admin")->where(array("admin_gid"=>0))->find();
            $city_new_price = $admininfo['admin_total_count'] + $city_price;
            $admin_model = Model("Admin");
            $admin = $admin_model->updateAdmin(array("admin_total_count"=>$city_new_price),$admininfo['admin_id']);
            if(empty($admin)){
                output_error('没有市代，相应分成给总后台，分成失败');
            }
            $city_data = [
                "lg_member_id" => $admininfo['admin_id'],
                "lg_member_name" => $admininfo['admin_name'],
                "lg_type" => "admin_other_city_payment",
                "lg_av_amount" => $city_price,
                "lg_add_time" => time(),
                "lg_desc" => "教孩视频，用户支付成功,没有市代给总后台分成。"
            ];
            $log_model->addLog($city_data);
        }
        //省代理商分成金额
        $province_price = sprintf('%.4f', $price*$proportion['value']['province_agent']/100);
        $province_agent = $company_model->getOrganizeInfo(array('o_provinceid'=>$teachercertify['provinceid'],"o_cityid"=>0));
        if($province_agent){
            $province_new_price = $province_agent['total_count'] + $province_price;
            $province = $company_model->editOrganize(array("o_id"=>$province_agent['o_id']),array("total_count"=>$province_new_price));
            if(empty($province)){
                output_error('省代分成失败');
            }
            $province_data = [
                "lg_member_id" => $province_agent['o_id'],
                "lg_member_name" => $province_agent['o_name'],
                "lg_type" => "share_province_payment",
                "lg_av_amount" => $province_price,
                "lg_add_time" => time(),
                "lg_desc" => "教孩视频，用户支付成功给省代理商分成。"
            ];
            $log_model->addLog($province_data);
        }else{
            $admininfo = db("admin")->where(array("admin_gid"=>0))->find();
            $province_new_price = $admininfo['admin_total_count'] + $province_price;
            $admin_model = Model("Admin");
            $admin = $admin_model->updateAdmin(array("admin_total_count"=>$province_new_price),$admininfo['admin_id']);
            if(empty($admin)){
                output_error('没有省代，相应分成给总后台，分成失败');
            }
            $province_data = [
                "lg_member_id" => $admininfo['admin_id'],
                "lg_member_name" => $admininfo['admin_name'],
                "lg_type" => "admin_other_province_payment",
                "lg_av_amount" => $province_price,
                "lg_add_time" => time(),
                "lg_desc" => "教孩视频，用户支付成功,没有省代给总后台分成。"
            ];
            $log_model->addLog($province_data);
        }
        //总后台分成金额
        $admin_price = sprintf('%.4f', $price*$proportion['value']['zb']/100);
        $admininfo = db("admin")->where(array("admin_gid"=>0))->find();
        $admin_new_price = $admininfo['admin_total_count'] + $admin_price;
        $admin_model = Model("Admin");
        $admin = $admin_model->updateAdmin(array("admin_total_count"=>$admin_new_price),$admininfo['admin_id']);
        if(empty($admin)){
            output_error('没有省代，相应分成给总后台，分成失败');
        }
        $admin_data = [
            "lg_member_id" => $admininfo['admin_id'],
            "lg_member_name" => $admininfo['admin_name'],
            "lg_type" => "admin_payment",
            "lg_av_amount" => $admin_price,
            "lg_add_time" => time(),
            "lg_desc" => "教孩视频，用户支付成功,给总后台分成。"
        ];
        $log_model->addLog($admin_data);
    }
}                  