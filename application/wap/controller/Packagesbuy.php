<?php

namespace app\wap\controller;


class Packagesbuy extends MobileMember
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取套餐列表
     * @return [type] [description]
     */
    public function get_packages_list(){
        $pkg=model('Pkgs');
        $condition=array();
        $condition['pkg_type'] = !empty(input('post.pkg_type'))?input('post.pkg_type'):1;
        $list = $pkg->getPkgList($condition);
        if ($list) {
            output_data($list);
        }else{
            output_error('暂无套餐信息！');
        }
    }

    /**
     * 获取已开启的支付列表
     * @return [type] [description]
     */
    public function get_payment_list(){
        $payment_list = model('mbpayment')->getMbPaymentOpenList();

        if (!empty($payment_list)) {
            foreach ($payment_list as $k => $value) {
                unset($payment_list[$k]['payment_id']);
                unset($payment_list[$k]['payment_config']);
                unset($payment_list[$k]['payment_state']);
                unset($payment_list[$k]['payment_state_text']);
            }
        }
        if(in_array($this->member_info['client_type'],array('ios','android'))){
            foreach ($payment_list as $k => $value) {
               if(!strpos($payment_list[$k]['payment_code'],'app')){
                   unset($payment_list[$k]);
               }
            }
        }
        output_data(array_values($payment_list));
    }

    /**
     * 计算套餐时间何时到期
     * @return [type] [description]
     */
    public function packages_time_reckon(){
        output_data($this->member_info);
    }




    /**
     * 购买套餐
     * 1，拿到需要购买的套餐信息
     *     --购买人信息
     *     --套餐信息
     *     --购买人孩子信息，摄像头信息
     *     --支付类型
     * 2，根据得到的信息生成订单
     *     --生成订单流水号
     *     --生成支付流水号
     *     --存储到订单表-》包含套餐信息，购买人信息，支付类型，孩子，摄像头信息
     *     --返回
     * @return [type] [description]
     */
    public function buy_step1(){

        
    }

    
    /**
     * 验证密码
     */
    public function check_password()
    {
        if (empty($_POST['password'])) {
            output_error('参数错误');
        }

        $model_member = Model('member');

        $member_info = $model_member->getMemberInfoByID($this->member_info['member_id']);
        if ($member_info['member_paypwd'] == md5($_POST['password'])) {
            output_data('1');
        }
        else {
            output_error('密码错误');
        }
    }

    /**
     * AJAX验证支付密码
     */
    public function check_pd_pwd()
    {
        if (empty($_POST['password'])) {
            output_error('支付密码格式不正确');
        }
        $buyer_info = Model('member')->getMemberInfoByID($this->member_info['member_id'], 'member_paypwd');
        if ($buyer_info['member_paypwd'] != '') {
            if ($buyer_info['member_paypwd'] === md5($_POST['password'])) {
                output_data('1');
            }
        }
        output_error('支付密码验证失败');
    }

    
}